package interactivespaces.service.image.depth.internal.openni2.libraries;

import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.TypedPointer;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;

import java.util.Collections;
import java.util.Iterator;

/**
 * Wrapper for library <b>NiTE2</b><br>
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/ShutCreditsAndLicense">uses a
 * few opensource projects.</a>.<br>
 * For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a
 * href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("NiTE2")
@Runtime(CRuntime.class)
public class NiTE2Library {
  static {
    BridJ.register();
  }

  /**
   * enum values<br>
   * <i>native declaration : NiteCEnums.h</i>
   */
  public enum NiteJointType implements IntValuedEnum<NiteJointType> {
    NITE_JOINT_HEAD(0), NITE_JOINT_NECK(1), NITE_JOINT_LEFT_SHOULDER(2), NITE_JOINT_RIGHT_SHOULDER(3),
    NITE_JOINT_LEFT_ELBOW(4), NITE_JOINT_RIGHT_ELBOW(5), NITE_JOINT_LEFT_HAND(6), NITE_JOINT_RIGHT_HAND(7),
    NITE_JOINT_TORSO(8), NITE_JOINT_LEFT_HIP(9), NITE_JOINT_RIGHT_HIP(10), NITE_JOINT_LEFT_KNEE(11),
    NITE_JOINT_RIGHT_KNEE(12), NITE_JOINT_LEFT_FOOT(13), NITE_JOINT_RIGHT_FOOT(14);
    NiteJointType(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<NiteJointType> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<NiteJointType> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteCEnums.h</i>
   */
  public enum NiteSkeletonState implements IntValuedEnum<NiteSkeletonState> {
    /** No skeleton - skeleton was not requested */
    NITE_SKELETON_NONE(0),
    /** Skeleton requested, but still unavailable */
    NITE_SKELETON_CALIBRATING(1),
    /** Skeleton available */
    NITE_SKELETON_TRACKED(2),
    /** Possible reasons as to why skeleton is unavailable */
    NITE_SKELETON_CALIBRATION_ERROR_NOT_IN_POSE(3), NITE_SKELETON_CALIBRATION_ERROR_HANDS(4),
    NITE_SKELETON_CALIBRATION_ERROR_HEAD(5), NITE_SKELETON_CALIBRATION_ERROR_LEGS(6),
    NITE_SKELETON_CALIBRATION_ERROR_TORSO(7);
    NiteSkeletonState(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<NiteSkeletonState> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<NiteSkeletonState> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteCEnums.h</i>
   */
  public enum NiteUserState implements IntValuedEnum<NiteUserState> {
    /** User is visible and already known */
    NITE_USER_STATE_VISIBLE(1),
    /** User is new - this is the first time the user is available */
    NITE_USER_STATE_NEW(2),
    /** User is lost. This is the last time this user will be seen */
    NITE_USER_STATE_LOST(4);
    NiteUserState(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<NiteUserState> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<NiteUserState> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteCEnums.h</i>
   */
  public enum NiteStatus implements IntValuedEnum<NiteStatus> {
    NITE_STATUS_OK(0), NITE_STATUS_ERROR(1), NITE_STATUS_BAD_USER_ID(2), NITE_STATUS_OUT_OF_FLOW(3);
    NiteStatus(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<NiteStatus> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<NiteStatus> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteCEnums.h</i>
   */
  public enum NitePoseType implements IntValuedEnum<NitePoseType> {
    NITE_POSE_PSI(0), NITE_POSE_CROSSED_HANDS(1);
    NitePoseType(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<NitePoseType> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<NitePoseType> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteCEnums.h</i>
   */
  public enum NitePoseState implements IntValuedEnum<NitePoseState> {
    NITE_POSE_STATE_DETECTING(1), NITE_POSE_STATE_IN_POSE(2), NITE_POSE_STATE_ENTER(4), NITE_POSE_STATE_EXIT(8);
    NitePoseState(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<NitePoseState> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<NitePoseState> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteCEnums.h</i>
   */
  public enum NiteGestureType implements IntValuedEnum<NiteGestureType> {
    NITE_GESTURE_WAVE(0), NITE_GESTURE_CLICK(1), NITE_GESTURE_HAND_RAISE(2);
    NiteGestureType(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<NiteGestureType> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<NiteGestureType> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteCEnums.h</i>
   */
  public enum NiteGestureState implements IntValuedEnum<NiteGestureState> {
    /** Future */
    NITE_GESTURE_STATE_NEW(1),
    /** Future */
    NITE_GESTURE_STATE_IN_PROGRESS(2), NITE_GESTURE_STATE_COMPLETED(4);
    NiteGestureState(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<NiteGestureState> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<NiteGestureState> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteCEnums.h</i>
   */
  public enum NiteHandState implements IntValuedEnum<NiteHandState> {
    /** This hand was lost. It is the last frame in which it will be provided */
    NITE_HAND_STATE_LOST(0),
    /** This is a new hand - it is the first frame in which it is available */
    NITE_HAND_STATE_NEW(1),
    /** This is a known hand */
    NITE_HAND_STATE_TRACKED(2),
    /**
     * This is a known hand, and in this frame it's very near the edge of the
     * field of view
     */
    NITE_HAND_STATE_TOUCHING_FOV(4);
    NiteHandState(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<NiteHandState> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<NiteHandState> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteEnums.h</i>
   */
  public enum JointType implements IntValuedEnum<JointType> {
    JOINT_HEAD(0), JOINT_NECK(1), JOINT_LEFT_SHOULDER(2), JOINT_RIGHT_SHOULDER(3), JOINT_LEFT_ELBOW(4),
    JOINT_RIGHT_ELBOW(5), JOINT_LEFT_HAND(6), JOINT_RIGHT_HAND(7), JOINT_TORSO(8), JOINT_LEFT_HIP(9), JOINT_RIGHT_HIP(
        10), JOINT_LEFT_KNEE(11), JOINT_RIGHT_KNEE(12), JOINT_LEFT_FOOT(13), JOINT_RIGHT_FOOT(14);
    JointType(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<JointType> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<JointType> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteEnums.h</i>
   */
  public enum SkeletonState implements IntValuedEnum<SkeletonState> {
    /** No skeleton - skeleton was not requested */
    SKELETON_NONE(0),
    /** Skeleton requested, but still unavailable */
    SKELETON_CALIBRATING(1),
    /** Skeleton available */
    SKELETON_TRACKED(2),
    /** Possible reasons as to why skeleton is unavailable */
    SKELETON_CALIBRATION_ERROR_NOT_IN_POSE(3), SKELETON_CALIBRATION_ERROR_HANDS(4), SKELETON_CALIBRATION_ERROR_HEAD(5),
    SKELETON_CALIBRATION_ERROR_LEGS(6), SKELETON_CALIBRATION_ERROR_TORSO(7);
    SkeletonState(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<SkeletonState> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<SkeletonState> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteEnums.h</i>
   */
  public enum Status implements IntValuedEnum<Status> {
    STATUS_OK(0), STATUS_ERROR(1), STATUS_BAD_USER_ID(2), STATUS_OUT_OF_FLOW(3);
    Status(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<Status> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<Status> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteEnums.h</i>
   */
  public enum PoseType implements IntValuedEnum<PoseType> {
    POSE_PSI(0), POSE_CROSSED_HANDS(1);
    PoseType(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<PoseType> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<PoseType> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  /**
   * enum values<br>
   * <i>native declaration : NiteEnums.h</i>
   */
  public enum GestureType implements IntValuedEnum<GestureType> {
    GESTURE_WAVE(0), GESTURE_CLICK(1), GESTURE_HAND_RAISE(2);
    GestureType(long value) {
      this.value = value;
    }

    public final long value;

    @Override
    public long value() {
      return this.value;
    }

    @Override
    public Iterator<GestureType> iterator() {
      return Collections.singleton(this).iterator();
    }

    public static IntValuedEnum<GestureType> fromValue(int value) {
      return FlagSet.fromValue(value, values());
    }
  };

  public static final int TIMEOUT_NONE = 0;
  public static final int TIMEOUT_FOREVER = -1;
  /** <i>native declaration : NiteVersion.h</i> */
  public static final int NITE_VERSION_BUILD = 5;
  /** <i>native declaration : NiteCTypes.h</i> */
  public static final int NITE_POSE_COUNT = 2;
  /** <i>native declaration : NiteVersion.h</i> */
  public static final int NITE_VERSION_MAJOR = 2;
  /** <i>native declaration : NiteVersion.h</i> */
  public static final int NITE_VERSION_MAINTENANCE = 0;
  /** <i>native declaration : NiteVersion.h</i> */
  public static final String NITE_BRIEF_VERSION_STRING = "2";
  /** <i>native declaration : NiteVersion.h</i> */
  public static final int NITE_VERSION_MINOR = 2;
  /** <i>native declaration : NiteVersion.h</i> */
  public static final String NITE_VERSION_STRING = "2";
  /** <i>native declaration : NiteVersion.h</i> */
  public static final int NITE_VERSION = 2 * 100000000 + 2 * 1000000 + 0 * 10000 + 5;
  /** <i>native declaration : NiteCTypes.h</i> */
  public static final int NITE_JOINT_COUNT = 15;

  /**
   * General<br>
   * Original signature : <code>NiteStatus niteInitialize()</code><br>
   * <i>native declaration : NiteCAPI.h:21</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteInitialize() {
    return FlagSet.fromValue(niteInitialize$2(), NiTE2Library.NiteStatus.class);
  }

  @Name("niteInitialize")
  protected native static int niteInitialize$2();

  /**
   * Original signature : <code>void niteShutdown()</code><br>
   * <i>native declaration : NiteCAPI.h:22</i>
   */
  native public static void niteShutdown();

  /**
   * Original signature : <code>NiteVersion niteGetVersion()</code><br>
   * <i>native declaration : NiteCAPI.h:24</i>
   */
  native public static NiteVersion niteGetVersion();

  /**
   * UserTracker<br>
   * Original signature :
   * <code>NiteStatus niteInitializeUserTracker(NiteUserTrackerHandle*)</code><br>
   * <i>native declaration : NiteCAPI.h:27</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteInitializeUserTracker(
      Pointer<NiTE2Library.NiteUserTrackerHandle> NiteUserTrackerHandlePtr1) {
    return FlagSet.fromValue(niteInitializeUserTracker(Pointer.getPeer(NiteUserTrackerHandlePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteInitializeUserTracker(@Ptr long NiteUserTrackerHandlePtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteInitializeUserTrackerByDevice(void*, NiteUserTrackerHandle*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:28</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteInitializeUserTrackerByDevice(
      Pointer<OpenNI2Library.OniDeviceHandle> deviceHandle,
      Pointer<NiTE2Library.NiteUserTrackerHandle> NiteUserTrackerHandlePtr1) {
    return FlagSet.fromValue(
        niteInitializeUserTrackerByDevice(deviceHandle.get().getPeer(), Pointer.getPeer(NiteUserTrackerHandlePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int
      niteInitializeUserTrackerByDevice(@Ptr long voidPtr1, @Ptr long NiteUserTrackerHandlePtr1);

  /**
   * Original signature : <code>NiteStatus niteShutdownUserTracker()</code><br>
   * <i>native declaration : NiteCAPI.h:29</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteShutdownUserTracker(NiteUserTrackerHandle userTracker) {
    return FlagSet.fromValue(niteShutdownUserTracker$2(userTracker.getPeer()), NiTE2Library.NiteStatus.class);
  }

  @Name("niteShutdownUserTracker")
  protected native static int niteShutdownUserTracker$2(@Ptr long userTracker);

  /**
   * Original signature : <code>NiteStatus niteStartSkeletonTracking()</code><br>
   * <i>native declaration : NiteCAPI.h:31</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteStartSkeletonTracking(NiteUserTrackerHandle userTracker) {
    return FlagSet.fromValue(niteStartSkeletonTracking$2(userTracker.getPeer()), NiTE2Library.NiteStatus.class);
  }

  @Name("niteStartSkeletonTracking")
  protected native static int niteStartSkeletonTracking$2(@Ptr long userTracker);

  public static void niteStopSkeletonTracking(NiteUserTrackerHandle userTracker) {
    niteStopSkeletonTracking(userTracker.getPeer());
  }

  /**
   * Original signature : <code>void niteStopSkeletonTracking()</code><br>
   * <i>native declaration : NiteCAPI.h:32</i>
   */
  native public static void niteStopSkeletonTracking(@Ptr long userTracker);

  public static boolean niteIsSkeletonTracking(NiteUserTrackerHandle userTracker) {
    return niteIsSkeletonTracking(userTracker.getPeer());
  }

  /**
   * Original signature : <code>bool niteIsSkeletonTracking()</code><br>
   * <i>native declaration : NiteCAPI.h:33</i>
   */
  native public static boolean niteIsSkeletonTracking(@Ptr long userTracker);

  /**
   * Original signature :
   * <code>NiteStatus niteSetSkeletonSmoothing(float)</code><br>
   * <i>native declaration : NiteCAPI.h:35</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteSetSkeletonSmoothing(NiteUserTrackerHandle userTracker,
      float float1) {
    return FlagSet.fromValue(niteSetSkeletonSmoothing$2(userTracker.getPeer(), float1), NiTE2Library.NiteStatus.class);
  }

  @Name("niteSetSkeletonSmoothing")
  protected native static int niteSetSkeletonSmoothing$2(@Ptr long userTracker, float float1);

  /**
   * Original signature :
   * <code>NiteStatus niteGetSkeletonSmoothing(float*)</code><br>
   * <i>native declaration : NiteCAPI.h:36</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteGetSkeletonSmoothing(
      NiTE2Library.NiteUserTrackerHandle userTracker, Pointer<Float> floatPtr1) {
    return FlagSet.fromValue(niteGetSkeletonSmoothing(userTracker.getPeer(), Pointer.getPeer(floatPtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteGetSkeletonSmoothing(@Ptr long userTracker, @Ptr long floatPtr1);

  /**
   * Original signature : <code>NiteStatus niteStartPoseDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:38</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteStartPoseDetection(
      NiTE2Library.NiteUserTrackerHandle userTracker) {
    return FlagSet.fromValue(niteStartPoseDetection$2(userTracker.getPeer()), NiTE2Library.NiteStatus.class);
  }

  @Name("niteStartPoseDetection")
  protected native static int niteStartPoseDetection$2(@Ptr long userTracker);

  public static void niteStopPoseDetection(NiTE2Library.NiteUserTrackerHandle userTracker) {
    niteStopPoseDetection(userTracker.getPeer());
  }

  /**
   * Original signature : <code>void niteStopPoseDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:39</i>
   */
  native public static void niteStopPoseDetection(@Ptr long userTracker);

  public static void niteStopAllPostDetection(NiTE2Library.NiteUserTrackerHandle userTracker) {
    niteStopAllPoseDetection(userTracker.getPeer());
  }

  /**
   * Original signature : <code>void niteStopAllPoseDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:40</i>
   */
  native public static void niteStopAllPoseDetection(@Ptr long userTracker);

  /**
   * Original signature :
   * <code>NiteStatus niteRegisterUserTrackerCallbacks(NiteUserTrackerCallbacks*, void*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:42</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteRegisterUserTrackerCallbacks(
      NiTE2Library.NiteUserTrackerHandle userTracker, Pointer<NiteUserTrackerCallbacks> NiteUserTrackerCallbacksPtr1,
      Pointer<?> voidPtr1) {
    return FlagSet.fromValue(
        niteRegisterUserTrackerCallbacks(userTracker.getPeer(), Pointer.getPeer(NiteUserTrackerCallbacksPtr1),
            Pointer.getPeer(voidPtr1)), NiTE2Library.NiteStatus.class);
  }

  protected native static int niteRegisterUserTrackerCallbacks(@Ptr long userTracker,
      @Ptr long NiteUserTrackerCallbacksPtr1, @Ptr long voidPtr1);

  /**
   * Original signature :
   * <code>void niteUnregisterUserTrackerCallbacks(NiteUserTrackerCallbacks*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:43</i>
   */
  public static void niteUnregisterUserTrackerCallbacks(NiTE2Library.NiteUserTrackerHandle userTracker,
      Pointer<NiteUserTrackerCallbacks> NiteUserTrackerCallbacksPtr1) {
    niteUnregisterUserTrackerCallbacks(userTracker.getPeer(), Pointer.getPeer(NiteUserTrackerCallbacksPtr1));
  }

  protected native static void niteUnregisterUserTrackerCallbacks(@Ptr long userTracker,
      @Ptr long NiteUserTrackerCallbacksPtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteReadUserTrackerFrame(NiteUserTrackerFrame**)</code><br>
   * <i>native declaration : NiteCAPI.h:45</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteReadUserTrackerFrame(NiteUserTrackerHandle userTracker,
      Pointer<Pointer<NiteUserTrackerFrame>> NiteUserTrackerFramePtrPtr1) {
    return FlagSet.fromValue(
        niteReadUserTrackerFrame(userTracker.getPeer(), Pointer.getPeer(NiteUserTrackerFramePtrPtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteReadUserTrackerFrame(@Ptr long userTracker, @Ptr long NiteUserTrackerFramePtrPtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteUserTrackerFrameAddRef(NiteUserTrackerFrame*)</code><br>
   * <i>native declaration : NiteCAPI.h:47</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteUserTrackerFrameAddRef(NiteUserTrackerHandle userTracker,
      Pointer<NiteUserTrackerFrame> NiteUserTrackerFramePtr1) {
    return FlagSet.fromValue(
        niteUserTrackerFrameAddRef(userTracker.getPeer(), Pointer.getPeer(NiteUserTrackerFramePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteUserTrackerFrameAddRef(@Ptr long userTracker, @Ptr long NiteUserTrackerFramePtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteUserTrackerFrameRelease(NiteUserTrackerFrame*)</code><br>
   * <i>native declaration : NiteCAPI.h:48</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteUserTrackerFrameRelease(NiteUserTrackerHandle userTracker,
      Pointer<NiteUserTrackerFrame> NiteUserTrackerFramePtr1) {
    return FlagSet.fromValue(
        niteUserTrackerFrameRelease(userTracker.getPeer(), Pointer.getPeer(NiteUserTrackerFramePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteUserTrackerFrameRelease(@Ptr long userTracker, @Ptr long NiteUserTrackerFramePtr1);

  /**
   * HandTracker<br>
   * Original signature :
   * <code>NiteStatus niteInitializeHandTracker(NiteHandTrackerHandle*)</code><br>
   * <i>native declaration : NiteCAPI.h:51</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteInitializeHandTracker(
      Pointer<NiTE2Library.NiteHandTrackerHandle> NiteHandTrackerHandlePtr1) {
    return FlagSet.fromValue(niteInitializeHandTracker(Pointer.getPeer(NiteHandTrackerHandlePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteInitializeHandTracker(@Ptr long NiteHandTrackerHandlePtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteInitializeHandTrackerByDevice(void*, NiteHandTrackerHandle*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:52</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteInitializeHandTrackerByDevice(Pointer<?> voidPtr1,
      Pointer<NiTE2Library.NiteHandTrackerHandle> NiteHandTrackerHandlePtr1) {
    return FlagSet.fromValue(
        niteInitializeHandTrackerByDevice(Pointer.getPeer(voidPtr1), Pointer.getPeer(NiteHandTrackerHandlePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int
      niteInitializeHandTrackerByDevice(@Ptr long voidPtr1, @Ptr long NiteHandTrackerHandlePtr1);

  /**
   * Original signature : <code>NiteStatus niteShutdownHandTracker()</code><br>
   * <i>native declaration : NiteCAPI.h:53</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteShutdownHandTracker() {
    return FlagSet.fromValue(niteShutdownHandTracker$2(), NiTE2Library.NiteStatus.class);
  }

  @Name("niteShutdownHandTracker")
  protected native static int niteShutdownHandTracker$2();

  /**
   * Original signature :
   * <code>NiteStatus niteStartHandTracking(const NitePoint3f*, NiteHandId*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:55</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteStartHandTracking(Pointer<NitePoint3f> NitePoint3fPtr1,
      Pointer<Short> pNewHandId) {
    return FlagSet.fromValue(niteStartHandTracking(Pointer.getPeer(NitePoint3fPtr1), Pointer.getPeer(pNewHandId)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteStartHandTracking(@Ptr long NitePoint3fPtr1, @Ptr long pNewHandId);

  /**
   * Original signature : <code>void niteStopHandTracking()</code><br>
   * <i>native declaration : NiteCAPI.h:56</i>
   */
  native public static void niteStopHandTracking();

  /**
   * Original signature : <code>void niteStopAllHandTracking()</code><br>
   * <i>native declaration : NiteCAPI.h:57</i>
   */
  native public static void niteStopAllHandTracking();

  /**
   * Original signature :
   * <code>NiteStatus niteSetHandSmoothingFactor(float)</code><br>
   * <i>native declaration : NiteCAPI.h:59</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteSetHandSmoothingFactor(float float1) {
    return FlagSet.fromValue(niteSetHandSmoothingFactor$2(float1), NiTE2Library.NiteStatus.class);
  }

  @Name("niteSetHandSmoothingFactor")
  protected native static int niteSetHandSmoothingFactor$2(float float1);

  /**
   * Original signature :
   * <code>NiteStatus niteGetHandSmoothingFactor(float*)</code><br>
   * <i>native declaration : NiteCAPI.h:60</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteGetHandSmoothingFactor(Pointer<Float> floatPtr1) {
    return FlagSet.fromValue(niteGetHandSmoothingFactor(Pointer.getPeer(floatPtr1)), NiTE2Library.NiteStatus.class);
  }

  protected native static int niteGetHandSmoothingFactor(@Ptr long floatPtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteRegisterHandTrackerCallbacks(NiteHandTrackerCallbacks*, void*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:62</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteRegisterHandTrackerCallbacks(
      Pointer<NiteHandTrackerCallbacks> NiteHandTrackerCallbacksPtr1, Pointer<?> voidPtr1) {
    return FlagSet.fromValue(
        niteRegisterHandTrackerCallbacks(Pointer.getPeer(NiteHandTrackerCallbacksPtr1), Pointer.getPeer(voidPtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteRegisterHandTrackerCallbacks(@Ptr long NiteHandTrackerCallbacksPtr1,
      @Ptr long voidPtr1);

  /**
   * Original signature :
   * <code>void niteUnregisterHandTrackerCallbacks(NiteHandTrackerCallbacks*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:63</i>
   */
  public static void niteUnregisterHandTrackerCallbacks(Pointer<NiteHandTrackerCallbacks> NiteHandTrackerCallbacksPtr1) {
    niteUnregisterHandTrackerCallbacks(Pointer.getPeer(NiteHandTrackerCallbacksPtr1));
  }

  protected native static void niteUnregisterHandTrackerCallbacks(@Ptr long NiteHandTrackerCallbacksPtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteReadHandTrackerFrame(NiteHandTrackerFrame**)</code><br>
   * <i>native declaration : NiteCAPI.h:65</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteReadHandTrackerFrame(
      Pointer<Pointer<NiteHandTrackerFrame>> NiteHandTrackerFramePtrPtr1) {
    return FlagSet.fromValue(niteReadHandTrackerFrame(Pointer.getPeer(NiteHandTrackerFramePtrPtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteReadHandTrackerFrame(@Ptr long NiteHandTrackerFramePtrPtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteHandTrackerFrameAddRef(NiteHandTrackerFrame*)</code><br>
   * <i>native declaration : NiteCAPI.h:67</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteHandTrackerFrameAddRef(
      Pointer<NiteHandTrackerFrame> NiteHandTrackerFramePtr1) {
    return FlagSet.fromValue(niteHandTrackerFrameAddRef(Pointer.getPeer(NiteHandTrackerFramePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteHandTrackerFrameAddRef(@Ptr long NiteHandTrackerFramePtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteHandTrackerFrameRelease(NiteHandTrackerFrame*)</code><br>
   * <i>native declaration : NiteCAPI.h:68</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteHandTrackerFrameRelease(
      Pointer<NiteHandTrackerFrame> NiteHandTrackerFramePtr1) {
    return FlagSet.fromValue(niteHandTrackerFrameRelease(Pointer.getPeer(NiteHandTrackerFramePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  protected native static int niteHandTrackerFrameRelease(@Ptr long NiteHandTrackerFramePtr1);

  /**
   * Original signature : <code>NiteStatus niteStartGestureDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:70</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteStartGestureDetection() {
    return FlagSet.fromValue(niteStartGestureDetection$2(), NiTE2Library.NiteStatus.class);
  }

  @Name("niteStartGestureDetection")
  protected native static int niteStartGestureDetection$2();

  /**
   * Original signature : <code>void niteStopGestureDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:71</i>
   */
  native public static void niteStopGestureDetection();

  /**
   * Original signature : <code>void niteStopAllGestureDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:72</i>
   */
  native public static void niteStopAllGestureDetection();

  /**
   * Original signature :
   * <code>NiteStatus niteConvertJointCoordinatesToDepth(NiteUserTrackerHandle, float, float, float, float*, float*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:74</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteConvertJointCoordinatesToDepth(
      NiTE2Library.NiteUserTrackerHandle userTracker, float x, float y, float z, Pointer<Float> pX, Pointer<Float> pY) {
    return FlagSet.fromValue(
        niteConvertJointCoordinatesToDepth(Pointer.getPeer(userTracker), x, y, z, Pointer.getPeer(pX),
            Pointer.getPeer(pY)), NiTE2Library.NiteStatus.class);
  }

  protected native static int niteConvertJointCoordinatesToDepth(@Ptr long userTracker, float x, float y, float z,
      @Ptr long pX, @Ptr long pY);

  /**
   * Original signature :
   * <code>NiteStatus niteConvertDepthCoordinatesToJoint(NiteUserTrackerHandle, int, int, int, float*, float*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:75</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteConvertDepthCoordinatesToJoint(
      NiTE2Library.NiteUserTrackerHandle userTracker, int x, int y, int z, Pointer<Float> pX, Pointer<Float> pY) {
    return FlagSet.fromValue(
        niteConvertDepthCoordinatesToJoint(Pointer.getPeer(userTracker), x, y, z, Pointer.getPeer(pX),
            Pointer.getPeer(pY)), NiTE2Library.NiteStatus.class);
  }

  protected native static int niteConvertDepthCoordinatesToJoint(@Ptr long userTracker, int x, int y, int z,
      @Ptr long pX, @Ptr long pY);

  /**
   * Original signature :
   * <code>NiteStatus niteConvertHandCoordinatesToDepth(NiteHandTrackerHandle, float, float, float, float*, float*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:76</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteConvertHandCoordinatesToDepth(
      NiTE2Library.NiteHandTrackerHandle handTracker, float x, float y, float z, Pointer<Float> pX, Pointer<Float> pY) {
    return FlagSet.fromValue(
        niteConvertHandCoordinatesToDepth(Pointer.getPeer(handTracker), x, y, z, Pointer.getPeer(pX),
            Pointer.getPeer(pY)), NiTE2Library.NiteStatus.class);
  }

  protected native static int niteConvertHandCoordinatesToDepth(@Ptr long handTracker, float x, float y, float z,
      @Ptr long pX, @Ptr long pY);

  /**
   * Original signature :
   * <code>NiteStatus niteConvertDepthCoordinatesToHand(NiteHandTrackerHandle, int, int, int, float*, float*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:77</i>
   */
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteConvertDepthCoordinatesToHand(
      NiTE2Library.NiteHandTrackerHandle handTracker, int x, int y, int z, Pointer<Float> pX, Pointer<Float> pY) {
    return FlagSet.fromValue(
        niteConvertDepthCoordinatesToHand(Pointer.getPeer(handTracker), x, y, z, Pointer.getPeer(pX),
            Pointer.getPeer(pY)), NiTE2Library.NiteStatus.class);
  }

  protected native static int niteConvertDepthCoordinatesToHand(@Ptr long handTracker, int x, int y, int z,
      @Ptr long pX, @Ptr long pY);

  /**
   * General<br>
   * Original signature : <code>NiteStatus niteInitialize()</code><br>
   * <i>native declaration : NiteCAPI.h:9</i>
   */
  @Name("niteInitialize")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteInitialize$3() {
    return FlagSet.fromValue(niteInitialize$4(), NiTE2Library.NiteStatus.class);
  }

  @Name("niteInitialize")
  protected native static int niteInitialize$4();

  /**
   * Original signature : <code>void niteShutdown()</code><br>
   * <i>native declaration : NiteCAPI.h:10</i>
   */
  @Name("niteShutdown")
  native public static void niteShutdown$3();

  /**
   * Original signature : <code>NiteVersion niteGetVersion()</code><br>
   * <i>native declaration : NiteCAPI.h:12</i>
   */
  @Name("niteGetVersion")
  native public static NiteVersion niteGetVersion$3();

  /**
   * UserTracker<br>
   * Original signature :
   * <code>NiteStatus niteInitializeUserTracker(NiteUserTrackerHandle*)</code><br>
   * <i>native declaration : NiteCAPI.h:15</i>
   */
  @Name("niteInitializeUserTracker")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteInitializeUserTracker$2(
      Pointer<NiTE2Library.NiteUserTrackerHandle> NiteUserTrackerHandlePtr1) {
    return FlagSet.fromValue(niteInitializeUserTracker$2(Pointer.getPeer(NiteUserTrackerHandlePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteInitializeUserTracker")
  protected native static int niteInitializeUserTracker$2(@Ptr long NiteUserTrackerHandlePtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteInitializeUserTrackerByDevice(void*, NiteUserTrackerHandle*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:16</i>
   */
  @Name("niteInitializeUserTrackerByDevice")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteInitializeUserTrackerByDevice$2(Pointer<?> voidPtr1,
      Pointer<NiTE2Library.NiteUserTrackerHandle> NiteUserTrackerHandlePtr1) {
    return FlagSet.fromValue(
        niteInitializeUserTrackerByDevice$2(Pointer.getPeer(voidPtr1), Pointer.getPeer(NiteUserTrackerHandlePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteInitializeUserTrackerByDevice")
  protected native static int niteInitializeUserTrackerByDevice$2(@Ptr long voidPtr1,
      @Ptr long NiteUserTrackerHandlePtr1);

  /**
   * Original signature : <code>NiteStatus niteShutdownUserTracker()</code><br>
   * <i>native declaration : NiteCAPI.h:17</i>
   */
  @Name("niteShutdownUserTracker")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteShutdownUserTracker$3() {
    return FlagSet.fromValue(niteShutdownUserTracker$4(), NiTE2Library.NiteStatus.class);
  }

  @Name("niteShutdownUserTracker")
  protected native static int niteShutdownUserTracker$4();

  /**
   * Original signature : <code>NiteStatus niteStartSkeletonTracking()</code><br>
   * <i>native declaration : NiteCAPI.h:19</i>
   */
  @Name("niteStartSkeletonTracking")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteStartSkeletonTracking$3() {
    return FlagSet.fromValue(niteStartSkeletonTracking$4(), NiTE2Library.NiteStatus.class);
  }

  @Name("niteStartSkeletonTracking")
  protected native static int niteStartSkeletonTracking$4();

  /**
   * Original signature : <code>void niteStopSkeletonTracking()</code><br>
   * <i>native declaration : NiteCAPI.h:20</i>
   */
  @Name("niteStopSkeletonTracking")
  native public static void niteStopSkeletonTracking$3();

  /**
   * Original signature : <code>bool niteIsSkeletonTracking()</code><br>
   * <i>native declaration : NiteCAPI.h:21</i>
   */
  @Name("niteIsSkeletonTracking")
  native public static boolean niteIsSkeletonTracking$3();

  /**
   * Original signature :
   * <code>NiteStatus niteSetSkeletonSmoothing(float)</code><br>
   * <i>native declaration : NiteCAPI.h:23</i>
   */
  @Name("niteSetSkeletonSmoothing")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteSetSkeletonSmoothing$3(float float1) {
    return FlagSet.fromValue(niteSetSkeletonSmoothing$4(float1), NiTE2Library.NiteStatus.class);
  }

  @Name("niteSetSkeletonSmoothing")
  protected native static int niteSetSkeletonSmoothing$4(float float1);

  /**
   * Original signature :
   * <code>NiteStatus niteGetSkeletonSmoothing(float*)</code><br>
   * <i>native declaration : NiteCAPI.h:24</i>
   */
  @Name("niteGetSkeletonSmoothing")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteGetSkeletonSmoothing$2(Pointer<Float> floatPtr1) {
    return FlagSet.fromValue(niteGetSkeletonSmoothing$2(Pointer.getPeer(floatPtr1)), NiTE2Library.NiteStatus.class);
  }

  @Name("niteGetSkeletonSmoothing")
  protected native static int niteGetSkeletonSmoothing$2(@Ptr long floatPtr1);

  /**
   * Original signature : <code>NiteStatus niteStartPoseDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:26</i>
   */
  @Name("niteStartPoseDetection")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteStartPoseDetection$3() {
    return FlagSet.fromValue(niteStartPoseDetection$4(), NiTE2Library.NiteStatus.class);
  }

  @Name("niteStartPoseDetection")
  protected native static int niteStartPoseDetection$4();

  /**
   * Original signature : <code>void niteStopPoseDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:27</i>
   */
  @Name("niteStopPoseDetection")
  native public static void niteStopPoseDetection$3();

  /**
   * Original signature : <code>void niteStopAllPoseDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:28</i>
   */
  @Name("niteStopAllPoseDetection")
  native public static void niteStopAllPoseDetection$3();

  /**
   * Original signature :
   * <code>NiteStatus niteRegisterUserTrackerCallbacks(NiteUserTrackerCallbacks*, void*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:30</i>
   */
  @Name("niteRegisterUserTrackerCallbacks")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteRegisterUserTrackerCallbacks$2(
      Pointer<NiteUserTrackerCallbacks> NiteUserTrackerCallbacksPtr1, Pointer<?> voidPtr1) {
    return FlagSet.fromValue(
        niteRegisterUserTrackerCallbacks$2(Pointer.getPeer(NiteUserTrackerCallbacksPtr1), Pointer.getPeer(voidPtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteRegisterUserTrackerCallbacks")
  protected native static int niteRegisterUserTrackerCallbacks$2(@Ptr long NiteUserTrackerCallbacksPtr1,
      @Ptr long voidPtr1);

  /**
   * Original signature :
   * <code>void niteUnregisterUserTrackerCallbacks(NiteUserTrackerCallbacks*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:31</i>
   */
  @Name("niteUnregisterUserTrackerCallbacks")
  public static void
      niteUnregisterUserTrackerCallbacks$2(Pointer<NiteUserTrackerCallbacks> NiteUserTrackerCallbacksPtr1) {
    niteUnregisterUserTrackerCallbacks$2(Pointer.getPeer(NiteUserTrackerCallbacksPtr1));
  }

  @Name("niteUnregisterUserTrackerCallbacks")
  protected native static void niteUnregisterUserTrackerCallbacks$2(@Ptr long NiteUserTrackerCallbacksPtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteReadUserTrackerFrame(NiteUserTrackerFrame**)</code><br>
   * <i>native declaration : NiteCAPI.h:33</i>
   */
  @Name("niteReadUserTrackerFrame")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteReadUserTrackerFrame$2(
      Pointer<Pointer<NiteUserTrackerFrame>> NiteUserTrackerFramePtrPtr1) {
    return FlagSet.fromValue(niteReadUserTrackerFrame$2(Pointer.getPeer(NiteUserTrackerFramePtrPtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteReadUserTrackerFrame")
  protected native static int niteReadUserTrackerFrame$2(@Ptr long NiteUserTrackerFramePtrPtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteUserTrackerFrameAddRef(NiteUserTrackerFrame*)</code><br>
   * <i>native declaration : NiteCAPI.h:35</i>
   */
  @Name("niteUserTrackerFrameAddRef")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteUserTrackerFrameAddRef$2(
      Pointer<NiteUserTrackerFrame> NiteUserTrackerFramePtr1) {
    return FlagSet.fromValue(niteUserTrackerFrameAddRef$2(Pointer.getPeer(NiteUserTrackerFramePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteUserTrackerFrameAddRef")
  protected native static int niteUserTrackerFrameAddRef$2(@Ptr long NiteUserTrackerFramePtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteUserTrackerFrameRelease(NiteUserTrackerFrame*)</code><br>
   * <i>native declaration : NiteCAPI.h:36</i>
   */
  @Name("niteUserTrackerFrameRelease")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteUserTrackerFrameRelease$2(
      Pointer<NiteUserTrackerFrame> NiteUserTrackerFramePtr1) {
    return FlagSet.fromValue(niteUserTrackerFrameRelease$2(Pointer.getPeer(NiteUserTrackerFramePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteUserTrackerFrameRelease")
  protected native static int niteUserTrackerFrameRelease$2(@Ptr long NiteUserTrackerFramePtr1);

  /**
   * HandTracker<br>
   * Original signature :
   * <code>NiteStatus niteInitializeHandTracker(NiteHandTrackerHandle*)</code><br>
   * <i>native declaration : NiteCAPI.h:39</i>
   */
  @Name("niteInitializeHandTracker")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteInitializeHandTracker$2(
      Pointer<NiTE2Library.NiteHandTrackerHandle> NiteHandTrackerHandlePtr1) {
    return FlagSet.fromValue(niteInitializeHandTracker$2(Pointer.getPeer(NiteHandTrackerHandlePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteInitializeHandTracker")
  protected native static int niteInitializeHandTracker$2(@Ptr long NiteHandTrackerHandlePtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteInitializeHandTrackerByDevice(void*, NiteHandTrackerHandle*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:40</i>
   */
  @Name("niteInitializeHandTrackerByDevice")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteInitializeHandTrackerByDevice$2(Pointer<?> voidPtr1,
      Pointer<NiTE2Library.NiteHandTrackerHandle> NiteHandTrackerHandlePtr1) {
    return FlagSet.fromValue(
        niteInitializeHandTrackerByDevice$2(Pointer.getPeer(voidPtr1), Pointer.getPeer(NiteHandTrackerHandlePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteInitializeHandTrackerByDevice")
  protected native static int niteInitializeHandTrackerByDevice$2(@Ptr long voidPtr1,
      @Ptr long NiteHandTrackerHandlePtr1);

  /**
   * Original signature : <code>NiteStatus niteShutdownHandTracker()</code><br>
   * <i>native declaration : NiteCAPI.h:41</i>
   */
  @Name("niteShutdownHandTracker")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteShutdownHandTracker$3() {
    return FlagSet.fromValue(niteShutdownHandTracker$4(), NiTE2Library.NiteStatus.class);
  }

  @Name("niteShutdownHandTracker")
  protected native static int niteShutdownHandTracker$4();

  /**
   * Original signature :
   * <code>NiteStatus niteStartHandTracking(const NitePoint3f*, NiteHandId*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:43</i>
   */
  @Name("niteStartHandTracking")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteStartHandTracking$2(Pointer<NitePoint3f> NitePoint3fPtr1,
      Pointer<Short> pNewHandId) {
    return FlagSet.fromValue(niteStartHandTracking$2(Pointer.getPeer(NitePoint3fPtr1), Pointer.getPeer(pNewHandId)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteStartHandTracking")
  protected native static int niteStartHandTracking$2(@Ptr long NitePoint3fPtr1, @Ptr long pNewHandId);

  /**
   * Original signature : <code>void niteStopHandTracking()</code><br>
   * <i>native declaration : NiteCAPI.h:44</i>
   */
  @Name("niteStopHandTracking")
  native public static void niteStopHandTracking$3();

  /**
   * Original signature : <code>void niteStopAllHandTracking()</code><br>
   * <i>native declaration : NiteCAPI.h:45</i>
   */
  @Name("niteStopAllHandTracking")
  native public static void niteStopAllHandTracking$3();

  /**
   * Original signature :
   * <code>NiteStatus niteSetHandSmoothingFactor(float)</code><br>
   * <i>native declaration : NiteCAPI.h:47</i>
   */
  @Name("niteSetHandSmoothingFactor")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteSetHandSmoothingFactor$3(float float1) {
    return FlagSet.fromValue(niteSetHandSmoothingFactor$4(float1), NiTE2Library.NiteStatus.class);
  }

  @Name("niteSetHandSmoothingFactor")
  protected native static int niteSetHandSmoothingFactor$4(float float1);

  /**
   * Original signature :
   * <code>NiteStatus niteGetHandSmoothingFactor(float*)</code><br>
   * <i>native declaration : NiteCAPI.h:48</i>
   */
  @Name("niteGetHandSmoothingFactor")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteGetHandSmoothingFactor$2(Pointer<Float> floatPtr1) {
    return FlagSet.fromValue(niteGetHandSmoothingFactor$2(Pointer.getPeer(floatPtr1)), NiTE2Library.NiteStatus.class);
  }

  @Name("niteGetHandSmoothingFactor")
  protected native static int niteGetHandSmoothingFactor$2(@Ptr long floatPtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteRegisterHandTrackerCallbacks(NiteHandTrackerCallbacks*, void*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:50</i>
   */
  @Name("niteRegisterHandTrackerCallbacks")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteRegisterHandTrackerCallbacks$2(
      Pointer<NiteHandTrackerCallbacks> NiteHandTrackerCallbacksPtr1, Pointer<?> voidPtr1) {
    return FlagSet.fromValue(
        niteRegisterHandTrackerCallbacks$2(Pointer.getPeer(NiteHandTrackerCallbacksPtr1), Pointer.getPeer(voidPtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteRegisterHandTrackerCallbacks")
  protected native static int niteRegisterHandTrackerCallbacks$2(@Ptr long NiteHandTrackerCallbacksPtr1,
      @Ptr long voidPtr1);

  /**
   * Original signature :
   * <code>void niteUnregisterHandTrackerCallbacks(NiteHandTrackerCallbacks*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:51</i>
   */
  @Name("niteUnregisterHandTrackerCallbacks")
  public static void
      niteUnregisterHandTrackerCallbacks$2(Pointer<NiteHandTrackerCallbacks> NiteHandTrackerCallbacksPtr1) {
    niteUnregisterHandTrackerCallbacks$2(Pointer.getPeer(NiteHandTrackerCallbacksPtr1));
  }

  @Name("niteUnregisterHandTrackerCallbacks")
  protected native static void niteUnregisterHandTrackerCallbacks$2(@Ptr long NiteHandTrackerCallbacksPtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteReadHandTrackerFrame(NiteHandTrackerFrame**)</code><br>
   * <i>native declaration : NiteCAPI.h:53</i>
   */
  @Name("niteReadHandTrackerFrame")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteReadHandTrackerFrame$2(
      Pointer<Pointer<NiteHandTrackerFrame>> NiteHandTrackerFramePtrPtr1) {
    return FlagSet.fromValue(niteReadHandTrackerFrame$2(Pointer.getPeer(NiteHandTrackerFramePtrPtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteReadHandTrackerFrame")
  protected native static int niteReadHandTrackerFrame$2(@Ptr long NiteHandTrackerFramePtrPtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteHandTrackerFrameAddRef(NiteHandTrackerFrame*)</code><br>
   * <i>native declaration : NiteCAPI.h:55</i>
   */
  @Name("niteHandTrackerFrameAddRef")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteHandTrackerFrameAddRef$2(
      Pointer<NiteHandTrackerFrame> NiteHandTrackerFramePtr1) {
    return FlagSet.fromValue(niteHandTrackerFrameAddRef$2(Pointer.getPeer(NiteHandTrackerFramePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteHandTrackerFrameAddRef")
  protected native static int niteHandTrackerFrameAddRef$2(@Ptr long NiteHandTrackerFramePtr1);

  /**
   * Original signature :
   * <code>NiteStatus niteHandTrackerFrameRelease(NiteHandTrackerFrame*)</code><br>
   * <i>native declaration : NiteCAPI.h:56</i>
   */
  @Name("niteHandTrackerFrameRelease")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteHandTrackerFrameRelease$2(
      Pointer<NiteHandTrackerFrame> NiteHandTrackerFramePtr1) {
    return FlagSet.fromValue(niteHandTrackerFrameRelease$2(Pointer.getPeer(NiteHandTrackerFramePtr1)),
        NiTE2Library.NiteStatus.class);
  }

  @Name("niteHandTrackerFrameRelease")
  protected native static int niteHandTrackerFrameRelease$2(@Ptr long NiteHandTrackerFramePtr1);

  /**
   * Original signature : <code>NiteStatus niteStartGestureDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:58</i>
   */
  @Name("niteStartGestureDetection")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteStartGestureDetection$3() {
    return FlagSet.fromValue(niteStartGestureDetection$4(), NiTE2Library.NiteStatus.class);
  }

  @Name("niteStartGestureDetection")
  protected native static int niteStartGestureDetection$4();

  /**
   * Original signature : <code>void niteStopGestureDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:59</i>
   */
  @Name("niteStopGestureDetection")
  native public static void niteStopGestureDetection$3();

  /**
   * Original signature : <code>void niteStopAllGestureDetection()</code><br>
   * <i>native declaration : NiteCAPI.h:60</i>
   */
  @Name("niteStopAllGestureDetection")
  native public static void niteStopAllGestureDetection$3();

  /**
   * Original signature :
   * <code>NiteStatus niteConvertJointCoordinatesToDepth(NiteUserTrackerHandle, float, float, float, float*, float*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:62</i>
   */
  @Name("niteConvertJointCoordinatesToDepth")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteConvertJointCoordinatesToDepth$2(
      NiTE2Library.NiteUserTrackerHandle userTracker, float x, float y, float z, Pointer<Float> pX, Pointer<Float> pY) {
    return FlagSet.fromValue(
        niteConvertJointCoordinatesToDepth$2(Pointer.getPeer(userTracker), x, y, z, Pointer.getPeer(pX),
            Pointer.getPeer(pY)), NiTE2Library.NiteStatus.class);
  }

  @Name("niteConvertJointCoordinatesToDepth")
  protected native static int niteConvertJointCoordinatesToDepth$2(@Ptr long userTracker, float x, float y, float z,
      @Ptr long pX, @Ptr long pY);

  /**
   * Original signature :
   * <code>NiteStatus niteConvertDepthCoordinatesToJoint(NiteUserTrackerHandle, int, int, int, float*, float*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:63</i>
   */
  @Name("niteConvertDepthCoordinatesToJoint")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteConvertDepthCoordinatesToJoint$2(
      NiTE2Library.NiteUserTrackerHandle userTracker, int x, int y, int z, Pointer<Float> pX, Pointer<Float> pY) {
    return FlagSet.fromValue(
        niteConvertDepthCoordinatesToJoint$2(Pointer.getPeer(userTracker), x, y, z, Pointer.getPeer(pX),
            Pointer.getPeer(pY)), NiTE2Library.NiteStatus.class);
  }

  @Name("niteConvertDepthCoordinatesToJoint")
  protected native static int niteConvertDepthCoordinatesToJoint$2(@Ptr long userTracker, int x, int y, int z,
      @Ptr long pX, @Ptr long pY);

  /**
   * Original signature :
   * <code>NiteStatus niteConvertHandCoordinatesToDepth(NiteHandTrackerHandle, float, float, float, float*, float*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:64</i>
   */
  @Name("niteConvertHandCoordinatesToDepth")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteConvertHandCoordinatesToDepth$2(
      NiTE2Library.NiteHandTrackerHandle handTracker, float x, float y, float z, Pointer<Float> pX, Pointer<Float> pY) {
    return FlagSet.fromValue(
        niteConvertHandCoordinatesToDepth$2(Pointer.getPeer(handTracker), x, y, z, Pointer.getPeer(pX),
            Pointer.getPeer(pY)), NiTE2Library.NiteStatus.class);
  }

  @Name("niteConvertHandCoordinatesToDepth")
  protected native static int niteConvertHandCoordinatesToDepth$2(@Ptr long handTracker, float x, float y, float z,
      @Ptr long pX, @Ptr long pY);

  /**
   * Original signature :
   * <code>NiteStatus niteConvertDepthCoordinatesToHand(NiteHandTrackerHandle, int, int, int, float*, float*)</code>
   * <br>
   * <i>native declaration : NiteCAPI.h:65</i>
   */
  @Name("niteConvertDepthCoordinatesToHand")
  public static IntValuedEnum<NiTE2Library.NiteStatus> niteConvertDepthCoordinatesToHand$2(
      NiTE2Library.NiteHandTrackerHandle handTracker, int x, int y, int z, Pointer<Float> pX, Pointer<Float> pY) {
    return FlagSet.fromValue(
        niteConvertDepthCoordinatesToHand$2(Pointer.getPeer(handTracker), x, y, z, Pointer.getPeer(pX),
            Pointer.getPeer(pY)), NiTE2Library.NiteStatus.class);
  }

  @Name("niteConvertDepthCoordinatesToHand")
  protected native static int niteConvertDepthCoordinatesToHand$2(@Ptr long handTracker, int x, int y, int z,
      @Ptr long pX, @Ptr long pY);

  public static class NiteHandTrackerHandle extends TypedPointer {
    public NiteHandTrackerHandle(long address) {
      super(address);
    }

    public NiteHandTrackerHandle(Pointer address) {
      super(address);
    }
  };

  public static class NiteUserTrackerHandle extends TypedPointer {
    public NiteUserTrackerHandle(long address) {
      super(address);
    }

    public NiteUserTrackerHandle(Pointer address) {
      super(address);
    }
  };

  /** Undefined type */
  public static interface NiteUserTracker {

  };

  /** Undefined type */
  public static interface NiteHandTracker {

  };
}
