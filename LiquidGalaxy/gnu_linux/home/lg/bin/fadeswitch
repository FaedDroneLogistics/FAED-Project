#!/bin/bash
# Copyright 2010 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# source common configuration
. ${HOME}/etc/shell.conf

MODE=${1:-audio}
LOAD=${2:-${XDG_PLS_DIR}/default}

ME="`basename $0`"
if [[ "$( id -un )" == "lg" ]]; then
    for screen in /home/lgS*; do
        if [[ -d ${screen} ]]; then
            screennum=${screen##/home/lgS}
            logger -p local3.info -i "$0: launching $ME for my screen \"${screennum}\""
            sudo -u lgS${screennum} -H DISPLAY=:0.${screennum} ${HOME}/bin/${ME} $@ &
            unset screennum
        fi
    done
fi

SANITIZE_D=${DISPLAY//:/}
[ -n "${SANITIZE_D##*\.}" -a ${SANITIZE_D##*\.} -ne 0 ] && export SCREEN_NO=${SANITIZE_D##*\.}

[ -n "${SCREEN_NO}" -a ${SCREEN_NO} -ne 0 ] && LOAD="${LOAD//lg\//$( id -un )/}"

# figure out control socket paths
# currently just audio or video
if [[ $MODE == audio ]]; then
    thisCTL=$MPAUDIOCTL
    thatCTL=$MPVIDEOCTL
elif [[ $MODE == video ]]; then
    thisCTL=$MPVIDEOCTL
    thatCTL=$MPAUDIOCTL
else
    echo "NO VALID MODE FOUND: \"${MODE}\"" >&2
    exit 1
fi

if [[ ! -p $thisCTL ]] && [[ ! -p $thatCTL ]]; then
    logger -p local3.err "$0: Control pipes: \"$thisCTL\", and \"$thatCTL\" fail type checking."
    echo "Control pipes: \"$thisCTL\", and \"$thatCTL\" fail type checking." >&2
    exit 1
fi

function ctlsend() {
    local myctl="$1"
    local mycmd="$2"
    #echo "$mycmd" | tee $( dirname ${myctl} )/*${myctl##*_} >/dev/null
    echo "$mycmd" > $myctl
}

## find random percentage for fade-in
RANGE_RANDPERC=60
FLOOR_RANDPERC=3
RANDPERC=0
while [[ ${RANDPERC} -le ${FLOOR_RANDPERC} ]]; do
    RANDPERC=$RANDOM
    let "RANDPERC %= $RANGE_RANDPERC"
done
## now have random percentage

# fade-out volume using the current mode
for vol in `seq 0 10`; do
    ctlsend $thisCTL "step_property volume -5"
    sleep .1
done

# "Stop" the OTHER mode
[ $FRAME_NO -eq 0 ] && sleep .5; ctlsend $thatCTL "stop"

# load new content and skip to a random percentage (on master, if audio)
[ $FRAME_NO -eq 0 ] && sleep .5; ctlsend $thisCTL "loadlist $LOAD"
if [[ $FRAME_NO == 0 ]] && [[ $MODE == audio ]]; then
    ctlsend $thisCTL "set_property percent_pos $RANDPERC"
fi

# fade-in volume using the current mode
for vol in `seq 5 5 60`; do
    ctlsend $thisCTL "set_property volume $vol"
    sleep .1
done
